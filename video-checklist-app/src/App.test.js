import { useEffect, useState } from "react";
import "./App.css";

/* ---------- 1. Êó•Êú¨Ë™û„Çπ„ÉÜ„ÉÉ„ÉóÔºàSTEP0„ÅÆ„ÅøË©≥Á¥∞ÂåñÔºâ ---------- */
const steps = [
  {
    title: "ÁõÆÊ®ôË®≠ÂÆö„Éª„Ç≥„É≥„Çª„Éó„ÉàÊ±∫„ÇÅ",
    fields: [
      { label: "ÁõÆÁöÑ", type: "select", opts: ["Ë™çÁü•Â∫¶Âêë‰∏ä", "Ë≤©Â£≤‰øÉÈÄ≤", "„Éñ„É©„É≥„Éá„Ç£„É≥„Ç∞", "Êé°Áî®Ê¥ªÂãï", "Á§æÂÜÖÊïôËÇ≤"] },
      { label: "Ë¶ñËÅ¥ËÄÖ„Çø„Éº„Ç≤„ÉÉ„Éà", type: "text" },
      { label: "ÂãïÁîª„Ç∏„É£„É≥„É´", type: "select", opts: ["Ëß£Ë™¨", "Vlog", "Â∫ÉÂëä", "„É¨„Éì„É•„Éº", "„Ç∑„Éß„Éº„ÉàÂãïÁîª"] },
      { label: "ÊàêÂäü„ÅÆÂÆöÁæ©", type: "select", opts: ["ÂÜçÁîüÊï∞", "ÁôªÈå≤ËÄÖÊï∞", "Ë≤©Â£≤", "Ë™çÁü•"] }
    ]
  },
  { title: "„Ç¢„Ç§„Éá„Ç¢Âá∫„Åó„Éª‰ºÅÁîª", fields: [] },
  { title: "Âè∞Êú¨„ÉªÊßãÊàêË®≠Ë®à", fields: [] },
  { title: "ÊíÆÂΩ±Ë®àÁîª„ÉªÊ∫ñÂÇô", fields: [] },
  { title: "ÊíÆÂΩ±", fields: [] },
  { title: "Á¥†ÊùêÊï¥ÁêÜ„ÉªÁÆ°ÁêÜ", fields: [] },
  { title: "Á∑®ÈõÜÔºà„Éù„Çπ„Éà„Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥Ôºâ", fields: [] },
  { title: "„É¨„Éì„É•„Éº„Éª‰øÆÊ≠£", fields: [] },
  { title: "Êõ∏„ÅçÂá∫„ÅóÔºà„É¨„É≥„ÉÄ„É™„É≥„Ç∞Ôºâ", fields: [] },
  { title: "„Çµ„É†„Éç„Ç§„É´„ÉªË™¨ÊòéÊñá‰ΩúÊàê", fields: [] },
  { title: "ÂÖ¨ÈñãÊ∫ñÂÇô", fields: [] },
  { title: "ÂÖ¨Èñã", fields: [] },
  { title: "ÂàÜÊûê„ÉªÊîπÂñÑÔºèÁ∂ôÁ∂öË®àÁîª", fields: [] }
];

const praises = ["Great! üéâ", "Á¥†Êô¥„Çâ„Åó„ÅÑÔºÅ‚ú®", "Good job üíØ", "„ÇÑ„Å£„Åü„Å≠ÔºÅü•≥"];

/* ---------- 2. React Component ---------- */
export default function App() {
  // notes = { stepIdx: {fieldIdx: value} }
  const [notes, setNotes] = useState(() => JSON.parse(localStorage.getItem("notes") || "{}"));
  const [praise, setPraise] = useState("");

  // --- ÈÄ≤ÊçóË®àÁÆó ---
  const totalFields = steps.reduce((acc, s) => acc + (s.fields?.length || 0), 0) || 1; // 0Èô§ÁÆóÂõûÈÅø
  const doneFields = Object.values(notes).reduce(
    (acc, fld) => acc + Object.values(fld).filter((v) => v).length,
    0
  );
  const percent = Math.round((doneFields / totalFields) * 100);

  useEffect(() => localStorage.setItem("notes", JSON.stringify(notes)), [notes]);

  const handleChange = (sIdx, fIdx, val) => {
    setNotes((prev) => {
      const next = { ...prev, [sIdx]: { ...(prev[sIdx] || {}), [fIdx]: val } };
      // STEPÂÆå‰∫Ü„Åó„Åü„ÇâË§í„ÇÅ„Çã
      if (
        steps[sIdx].fields.length &&
        steps[sIdx].fields.every((_, i) => next[sIdx]?.[i])
      ) {
        setPraise(praises[Math.floor(Math.random() * praises.length)]);
        setTimeout(() => setPraise(""), 2500);
      }
      return next;
    });
  };

  return (
    <div className="container">
      {/* ÈÄ≤Êçó„Éê„Éº */}
      <div className="progress">
        <div className="bar" style={{ width: `${percent}%` }} />
        <span className="percent">{percent}%</span>
      </div>

      {steps.map((step, sIdx) => (
        <details key={sIdx} className="card" open={sIdx === 0}>
          <summary>
            {doneFields && step.fields.length
              ? step.fields.every((_, i) => notes[sIdx]?.[i])
                ? "‚úÖ "
                : "‚ñ∂Ô∏é "
              : "‚óªÔ∏é "}
            {sIdx + 1}. {step.title}
          </summary>

          {step.fields.map((field, fIdx) => (
            <div key={fIdx} className="field">
              <label>{field.label}</label>
              {field.type === "select" ? (
                <select
                  value={notes[sIdx]?.[fIdx] || ""}
                  onChange={(e) => handleChange(sIdx, fIdx, e.target.value)}
                >
                  <option value="">ÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ</option>
                  {field.opts.map((opt) => (
                    <option key={opt}>{opt}</option>
                  ))}
                </select>
              ) : (
                <input
                  type="text"
                  value={notes[sIdx]?.[fIdx] || ""}
                  onChange={(e) => handleChange(sIdx, fIdx, e.target.value)}
                  placeholder="ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ"
                />
              )}
            </div>
          ))}
        </details>
      ))}

      {praise && <div className="praise">{praise}</div>}
    </div>
  );
}
